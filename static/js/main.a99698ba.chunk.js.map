{"version":3,"sources":["components/PhoneItem/PhoneItem.module.css","components/PhoneList/PhoneList.module.css","components/Filter/Filter.module.css","redux/contacts/selectors/selectors.js","redux/contacts/slice/slice.js","redux/contacts/AsyncOperation/asyncOperation.js","components/FormSubmit/FormSubmit.js","components/PhoneItem/PhoneItem.js","components/PhoneList/PhoneList.js","components/Filter/Filter.js","App.js","redux/store.js","index.js","components/FormSubmit/FormSubmit.module.css"],"names":["module","exports","selectContactItem","state","phoneBook","contacts","items","selectFilter","filtration","search","createSlice","name","initialState","isLoading","error","reducers","fetchContact","fetchContactResolve","action","payload","fetchContactReject","filterContacts","_","actions","combineReducers","reducer","getPhoneContact","dispatch","a","fetch","then","response","json","catch","message","data","FormSubmit","phone","title","useDispatch","listConcacts","useSelector","useState","setName","number","setNumder","submitContact","contact","checkContact","alert","requestOptions","method","headers","body","JSON","stringify","addContactAsync","find","toLowerCase","className","css","form","onSubmit","e","preventDefault","label","description","input","type","pattern","required","value","onChange","target","button","propType","PropTypes","string","PhoneItem","id","removeContact","removeContactAsync","item","text","onClick","CreateContactList","useEffect","block","list","filter","includes","map","Filter","conteiner","App","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a99698ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PhoneItem_item__f2W1e\",\"text\":\"PhoneItem_text__1Akyg\",\"button\":\"PhoneItem_button__27IiL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PhoneList_block__3fMXC\",\"title\":\"PhoneList_title__1lDm8\",\"list\":\"PhoneList_list__yB7a5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Filter_conteiner__3wAxq\",\"title\":\"Filter_title__3Rs4i\",\"input\":\"Filter_input__3rOqR\"};","export const selectContactItem = state => state.phoneBook.contacts.items;\nexport const selectFilter = state => state.phoneBook.filtration.search;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nconst contacts = createSlice({\n  name: 'contacts',\n  initialState: {\n    isLoading: false,\n    items: [],\n    error: null,\n  },\n  reducers: {\n    fetchContact: state => ({\n      ...state,\n      isLoading: true,\n    }),\n    fetchContactResolve: (state, action) => ({\n      ...state,\n      isLoading: false,\n      items: action.payload,\n    }),\n    fetchContactReject: (state, action) => ({\n      ...state,\n      isLoading: false,\n      items: [],\n      error: action.payload,\n    }),\n  },\n});\n\nconst filtration = createSlice({\n  name: 'filtration',\n  initialState: {\n    search: '',\n  },\n  reducers: {\n    filterContacts: (_, { payload }) => ({\n      search: payload,\n    }),\n  },\n});\n\nexport const { fetchContact, fetchContactResolve, fetchContactReject } =\n  contacts.actions;\nexport const { filterContacts } = filtration.actions;\n\nexport const phoneBook = combineReducers({\n  contacts: contacts.reducer,\n  filtration: filtration.reducer,\n});\n","import {\n  fetchContact,\n  fetchContactResolve,\n  fetchContactReject,\n} from '../slice/slice';\n\nexport const getPhoneContact = () => async dispatch => {\n  dispatch(fetchContact());\n  const data = await fetch(`http://localhost:3000/contacts`)\n    .then(response => response.json())\n    .catch(error => dispatch(fetchContactReject(error.message)));\n  dispatch(fetchContactResolve(data));\n};\n\nexport const addContactAsync = contact => async dispatch => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(contact),\n  };\n  dispatch(fetchContact());\n  const response = await fetch(`http://localhost:3000/contacts`, requestOptions)\n    .then(response => response.json())\n    .catch(error => dispatch(fetchContactReject(error.message)));\n  dispatch(getPhoneContact(response));\n};\n\nexport const removeContactAsync = id => async dispatch => {\n  const requestOptions = {\n    method: 'DELETE',\n  };\n  dispatch(fetchContact());\n  const data = await fetch(\n    `http://localhost:3000/contacts/${id}`,\n    requestOptions,\n  )\n    .then(response => response.json())\n    .catch(error => dispatch(fetchContactReject(error.message)));\n  dispatch(getPhoneContact(data));\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactItem } from '../../redux/contacts/selectors/selectors';\nimport { addContactAsync } from '../../redux/contacts/AsyncOperation/asyncOperation';\nimport css from '../FormSubmit/FormSubmit.module.css';\n\nfunction FormSubmit({ phone, title }) {\n  const dispatch = useDispatch();\n  const listConcacts = useSelector(selectContactItem);\n  const [name, setName] = useState('');\n  const [number, setNumder] = useState('');\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangeNumder = e => {\n    setNumder(e.target.value);\n  };\n\n  const submitContact = contact => {\n    if (!checkContact(contact.name)) {\n      dispatch(addContactAsync(contact));\n    } else {\n      alert(`${contact.name} is alredy in contacts`);\n    }\n  };\n\n  const checkContact = name => {\n    return listConcacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n    submitContact(contact);\n    setName('');\n    setNumder('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        <p className={css.description}>{title}</p>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n\n      <label className={css.label}>\n        <p className={css.description}>{phone}</p>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChangeNumder}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        add contact\n      </button>\n    </form>\n  );\n}\n\nFormSubmit.propType = {\n  title: PropTypes.string,\n  phone: PropTypes.string,\n};\n\nexport default FormSubmit;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { removeContactAsync } from '../../redux/contacts/AsyncOperation/asyncOperation';\nimport css from '../PhoneItem/PhoneItem.module.css';\n\nfunction PhoneItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const removeContact = id => {\n    dispatch(removeContactAsync(id));\n  };\n\n  return (\n    <li className={css.item}>\n      <p>{name}</p>: <p className={css.text}>{number}</p>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={() => removeContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nPhoneItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default PhoneItem;\n","import PropTypes from 'prop-types';\nimport PhoneItem from '../PhoneItem/PhoneItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContactItem,\n  selectFilter,\n} from '../../redux/contacts/selectors/selectors';\nimport { getPhoneContact } from '../../redux/contacts/AsyncOperation/asyncOperation';\nimport css from '../PhoneList/PhoneList.module.css';\nimport { useEffect } from 'react';\n\nconst CreateContactList = ({ title }) => {\n  const dispatch = useDispatch();\n  const listConcacts = useSelector(selectContactItem);\n  const payload = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(getPhoneContact());\n  }, [dispatch]);\n\n  const filterContact = () => {\n    return listConcacts.filter(({ name }) =>\n      name.toLowerCase().includes(payload),\n    );\n  };\n\n  return (\n    <section className={css.block}>\n      <h2 className={css.title}>{title}</h2>\n      <ul className={css.list}>\n        {filterContact().map(({ id, name, number }) => (\n          <PhoneItem key={id} id={id} name={name} number={number} />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nCreateContactList.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default CreateContactList;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/slice/slice';\nimport { selectFilter } from '../../redux/contacts/selectors/selectors';\nimport css from '../Filter/Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <div className={css.conteiner}>\n      <h3 className={css.title}>Find contacts by name</h3>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nFilter.propType = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import './App.css';\nimport FormSubmit from './components/FormSubmit/FormSubmit';\nimport CreateContactList from './components/PhoneList/PhoneList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Phonebook</h1>\n      <FormSubmit title={'Name'} phone={'Number'} />\n      <Filter />\n      <CreateContactList title={'Contacts'} />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { phoneBook } from '../redux/contacts/slice/slice';\n\nexport const store = configureStore({\n  reducer: {\n    phoneBook: phoneBook,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormSubmit_form__1qxvr\",\"label\":\"FormSubmit_label__1zVsg\",\"description\":\"FormSubmit_description__19-gU\",\"input\":\"FormSubmit_input__3Kami\",\"button\":\"FormSubmit_button__3zLMb\"};"],"sourceRoot":""}